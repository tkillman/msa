server:
  port: 8080


---
spring:
  profiles: default
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
  cloud:
    stream:
      kafka:
#        bindings:
#          event-in:
#            consumer:
#              enableDlq: true
#              dlqName: JobError
#              autoCommitOnError: true
#              autoCommitOffset: true
#              maxAttempts: 1
        binder:
          brokers: localhost:9092
        streams:
          binder:
            serdeError: sendToDlq
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: products
          destination: eventTopic
          contentType: application/json
        event-out:
          destination: eventTopic
          contentType: application/json
management:
  endpoints:
    web:
      exposure:
        include: hystrix.stream, info, health
logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug
server:
  port: 8085
---
spring:
  profiles: docker
#  sleuth:
#    sampler:
#      probability: 1
#    web:
#      skipPattern: (^cleanup.*|.+favicon.*)
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka.kafka.svc.cluster.local:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: products
          destination: eventTopicDocker
          contentType: application/json
        event-out:
          destination: eventTopicDocker
          contentType: application/json
